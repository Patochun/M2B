
Release notes :

MTB V6

- Remove channels objects and work only with track
    - Channel is a data used by device MIDI. Not very usefull in visualisation context
    - Channel data still remain in track.notes
    - Cleaning channels object in code
- Blender object refunded (for performance and simplicity)
    - Use tracks instead channels
    - One shared mesh with 3 custom attributes :
        - baseColor
        - emissionColor
        - emissionStrength
    - One shared material (6 nodes) with
        - named matGlobalCustom
        - 3 attributes nodes
            - attribute baseColor linked on first colorRamp
            - attribute emissionColor linked on second colorRamp
            - attribute emissionStrength linked on emission Strength of principleBSDF
        - 1 principleBSDF
        - 2 colorRamp
            - 1 for baseColor (black, white, red, Yellow, green, cyan, blue, purple)
            - 1 for emissionColor (blue to red)
- Notes strip
    - Use tracks instead channels
    - Tracks are interlaced on same strip
- WaterFall (added)
    - Use tracks
- EventNote refunded and renamed noteAnimate
    - Take care about short note < 3 frames
    - Take care about previous note and nex note to avoid interlace
    - Use attributes for Light (baseColor,emissionColor,emissionStrength) from each note object
    - Now, can manage multiple animType Scale, Light for each not object
- Add compositor
    - Node glare with blooming
- Cleaning import    

MTB V5

- Add MIDITrackUsed data into MIDIChannel structure
    - TODO => is it usefull ? else cleanup !
- Add information in log
    - Dispatch count of notes created by track in channel with data table
- Accordingly to visualisation method, create or not independant material
    - For the moment, usage only with Light
- Track index start from 0 instead of 1
- BGAnimation use track info instead of channel info
    - To avoid multiple note from different track at same time in the same channel
        - This case create artefact in animation
    - No visualisation for note with length under 4 frames
        - Raise FPS to avoid them is the only way
- Notes strip
    - Create a model cube by track to have multiple base color
    - Create sub collection by track
    - Include track info in note object

MTB V4

- Purging orphaned data to clean up Blender
- Test note length minimum (not under (10 % of FPS) * 2) => Clamp
- Small change to channels data structure
- All objects have the same mesh but still have individual material
- Add multiple eventNote visualisation
    - Scale = same as before
    - Light = use note on/note off and velocity to manage light
        - Use sigmoid curve to have stronger blue for low velocities and stronger red for high velocities
- Notes Strip = Use the precise range of notes instead of fixed 88 notes
    - Use different color for multiple track on same channel
        - Versus Filter same note played at the same time in MIDI data on same channel from multiple track
- Notes Strip => possibility to precise witch channel we choose with a channel mask

MTB V3

- Simplify midiparser to focus only on note events
    - Check all events to have allways the good deltatime from any events
    - But memorize only note events (on and off)
- Remove unused JSON conf file
- Process channel only if there notes into
- BarGraph evolve
    - Color cubes black or white accordingly sharp or not
    - Center on Y axis from real channels used
- Retrieve the minimal rythms ticks from midiFile
- Add Notes Strip visualisation
- Optimize for BarGraph or Notes Strip with reuse of model object linked to all objects I Need
- Create Hidden collection to store model object into
- RÃ©organize collection

MTB V2

- Add midi channel concept
    - In any track there is one or multiple midi channel associated with notes
    - Mean any note are played into a specific midi channel
- Testing for midi format 0, 1 et 2
    - Secure ASCII decoding for values above 128 (use latin-1 instead)MTB V1

MTB V1

- Inform if fps is good or not (>=50 is good)
- Reuse of MIDI parser
- Read MIDI datas
- Remove tracks with no note to cleaning a little
- Add BarGraph visualisation
    - Create one line of cubes per track
    - Create one cube per existing note
    - Animates cubes size in Z axis with note events
